<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Route Information - Viriciti Tech Assesment Robbert-Jan Sebregts</title>
</head>
<style>
    table {
        max-height: 50vh;
        display: block;
    }
</style>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">

<body>
    <div id="mainDiv" class="container">
        <div id="showData">
            <div class="text-center">
                <div class="h1">Latest Route Information</div>
                <div>
                    <a href="../routeInformationLookup" class="btn btn-lg btn-primary">Find specific routes</a>
                </div>
                <div>
                    <a href="../incidents" class="btn btn-lg btn-danger">See All Incidents</a>
                    <a href="../incidentLookup" class="btn btn-lg btn-danger">Specific Incidents</a>
                </div>

            </div>
            <div id="vehiclePlaceholder" class="d-none border border-info rounded p-2 my-3">
                <div>
                    <div class="h1 vehicle_vehicleName"></div>
                    </span>
                </div>
                <table class="vehicleInformation table overflow-auto">
                    <thead class="thead-dark" id="vehicleInformationTableHeader">
                        <tr>
                            <th scope="col" class="">🕑 Time</th>
                            <th scope="col" class="">🔌 Energy Usage</th>
                            <th scope="col" class="">🌎 GPS</th>
                            <th scope="col" class="">📏 Distance</th>
                            <th scope="col" class="">🏁 Speed</th>
                            <th scope="col" class="">🔋 Soc</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>

    </div>

</body>

</html>


<script src="/socket.io/socket.io.js"></script>
<script>
    const browserAddress = window.location
    const browserLocation = `${window.location.protocol}//${browserAddress.host}`
    var socket = io(browserLocation);
    const vehiclePlaceholder = document.getElementById('vehiclePlaceholder')
    const showDataDiv = document.getElementById('showData')
    socket.on('vehicleMessage', data => {
        showData(data)
    })
    socket.on('vehicleError', data => {
        showData(data)
    })
    const showData = (data) => {
        let vehicleTableDiv = document.getElementById(`vehicle_${data.vehicleName}`)
        if (data.error) {
            vehicleTableDiv = document.getElementById(`vehicleError_${data.vehicleName}`)
        }
        if (!vehicleTableDiv) {
            vehicleTableDiv = createVehicleTable(data)
            showDataDiv.append(vehicleTableDiv)
        }
        const vehicleTable = vehicleTableDiv.querySelector('table')
        const newRow = vehicleTable.insertRow(1)
        const keysArray = ['time', 'vehicleName', 'energy', 'gps', 'odo', 'speed', 'soc']
        keysArray.forEach(key => {
            let newCell = null
            switch (key) {
                case 'vehicleName':
                    break;
                case 'error':
                    break;
                case 'time':
                    newCell = newRow.insertCell(-1)
                    const date = new Date(data[key])
                    const dateString = `${date.getFullYear()}-${date.getMonth()}-${date.getDate()} ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`
                    newCell.textContent = dateString;
                    break;
                default:
                    newCell = newRow.insertCell(-1)
                    newCell.textContent = data[key]
            }
        })
    }
    const createVehicleTable = (data) => {
        let vehicleTableDiv = vehiclePlaceholder.cloneNode(true)
        vehicleTableDiv.querySelector(`.vehicle_vehicleName`).textContent = `🚌 ${data.vehicleName}`
        if (data.error) {
            vehicleTableDiv.id = `vehicleError_${data.vehicleName}`
            vehicleTableDiv.classList.add('text-danger')
        } else {
            vehicleTableDiv.id = `vehicle_${data.vehicleName}`
        }
        vehicleTableDiv.classList.remove('d-none')
        return vehicleTableDiv
    }
    const getReadableDate = (date) => {
        date = new Date(date)
        return `${date.getFullYear()}-${date.getMonth()}-${date.getDate()} ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`
    }
</script>